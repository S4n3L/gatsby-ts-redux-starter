/**
 * Implement Gatsby's Node APIs in this file.
 *
 * See: https://www.gatsbyjs.org/docs/node-apis/
 */

// You can delete this file if you're not using it

exports.onCreateWebpackConfig = ({
  stage,
  rules,
  loaders,
  plugins,
  actions,
}) => {
  const path = require("path")  // eslint-disable-line
  const autoprefixer = require("autoprefixer")  // eslint-disable-line

  actions.setWebpackConfig({
    module: {
      rules: [
        {
          test: /\.(scss|sass)$/,
          exclude: /node_modules/,
          use: [
            // { loader: ExtractCssChunks.loader },
            {
              loader: "@teamsupercell/typings-for-css-modules-loader",
              options: {
                banner:
                  "// autogenerated by typings-for-css-modules-loader. \n// Please do not change this file!"
              }
            },
            {
              loader: "css-loader",
              options: {
                importLoaders: 2,
                //onlyLocals: true,
                localsConvention: "camelCase",
                modules: {
                  localIdentName: "[name]__[local]___[hash:base64:8]",
                }
              }
            },
            {
              loader: "postcss-loader",
              options: {
                ident: "postcss",
                plugins: () => [
                  autoprefixer()
                ]
              }
            },
            {
              loader: "sass-loader",
              options: {
                sassOptions: {
                  // This allow us to use @import statement in sccs files without the "../../.." syntax
                  includePaths: [path.resolve(__dirname, "../src/client/styles/css")]
                }
              }
            }
          ],
        },
      ],
    },
    plugins: [
      plugins.define({
        __DEVELOPMENT__: stage === "develop" || stage === "develop-html",
      }),
    ],
  })
}
